---
- name: Set PostgreSQL environment variables.
  template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: restart postgresql

- name: Ensure PostgreSQL data directory exists.
  file:
    path: "{{ postgresql_data_dir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Ensure PostgreSQL database is initialized.
  command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
  when: not postgresql_slave and not pgdata_dir_version.stat.exists
  become: true
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name: Add replication credentials to .pgpass file.
  blockinfile:
    path: ~/.pgpass
    marker: "# {mark} ansible-role-postgresql: replication credentials"
    block: |
      {{ postgresql_primary_host }}:{{ postgresql_primary_port }}:*:{{ postgresql_primary_user }}:{{ postgresql_primary_password }}
    create: yes
    mode: 0600
  when: postgresql_slave
  become: true
  become_user: "{{ postgresql_user }}"
  notify: restart postgresql

- name: Fetching base backup from primary (it may takes a long time).
  shell: |
    {{ postgresql_bin_path }}/pg_basebackup \
      -U {{ postgresql_primary_user }} \
      -h {{ postgresql_primary_host }} \
      -p {{ postgresql_primary_port }} \
      -S {{ postgresql_primary_slot }} \
      -D {{ postgresql_data_dir }} \
      -w
  when: postgresql_slave and not pgdata_dir_version.stat.exists
  become: true
  become_user: "{{ postgresql_user }}"
  notify: restart postgresql

- name: Ensure standby.signal file exists on slave.
  copy:
    content: ""
    force: no
    dest: "{{ postgresql_data_dir }}/standby.signal"
  when: postgresql_slave
  become: true
  become_user: "{{ postgresql_user }}"
  notify: restart postgresql

- name: Ensure standby.signal file is not exists on primary.
  file:
    path: "{{ postgresql_data_dir }}/standby.signal"
    state: absent
  when: not postgresql_slave
  become: true
  become_user: "{{ postgresql_user }}"
  notify: restart postgresql
